name: shrinkwrap
on:
  workflow_dispatch:
    inputs:
      versiontag:
        description: "Public version label in the form 0.0.1"
        required: true

jobs:
  packagewin:
    runs-on: "windows-latest"
    steps:
    - uses: actions/checkout@v3.1.0
    - name: Set up Python
      uses: actions/setup-python@v4.3.0
      with:
        python-version: "3.11"
        
    - name: Install python build dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools
        pip install -r package/requirements.txt      
    
    - name: Install app dependencies
      run: |
        python -m venv venv
        ./venv/Scripts/Activate.ps1
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create Windows python app
      run: |
         python package/runpyinstaller.py
         
    - name: Install NSIS
      run: |
        iwr -useb get.scoop.sh -outfile 'install.ps1'
        .\install.ps1 -RunAsAdmin
        scoop update
        scoop bucket add extras
        scoop install nsis
        makensis -VERSION

    - name: Create Windows Installer
      run: |
         makensis.exe ./package/wininstall.nsi         
         
    - name: Upload Windows installer
      uses: actions/upload-artifact@v3
      with:
        name: Saint_Helens_install.exe
        path: dist/Saint_Helens_install.exe
        if-no-files-found: error        
         
  packageosx:
    runs-on: "macOS-latest"
    steps:
    - uses: actions/checkout@v3.1.0
    - name: Set up Python
      uses: actions/setup-python@v4.3.0
      with:
        python-version: "3.11"
      
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools
        pip install -r package/requirements.txt
        
    - name: Install app dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create osx app
      run: |
         python package/runpyinstaller.py
         ls ./dist/

    - name: Create osx disk image
      run: |
         python -m dmgbuild -s package/osxdmgbuild.py "Saint_Helens" Saint_Helens.dmg
         ls -l  Saint_Helens.dmg
         
    - name: Upload disk image
      uses: actions/upload-artifact@v3
      with:
        name: Saint_Helens.dmg
        path: Saint_Helens.dmg
        if-no-files-found: error
          
  publish:
    needs: [packageosx,packagewin]
    runs-on: ubuntu-latest

    permissions:
      contents: write
      
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./artifacts
 
      - name: List artifacts
        run: |
          ls -R ./artifacts
      
      - name: Sparse Checkout
        uses: actions/checkout@v3
        with:
          path: 'repo'
          sparse-checkout: |
            README.md
            LICENSE
          sparse-checkout-cone-mode: False
      
      - name: Set version
        run: |
          echo "VERSION=${{ github.event.inputs.versiontag }}" >> $GITHUB_ENV
          echo tag "${{ github.event.inputs.versiontag }}"
          echo "Release Text" > ./release.body.txt
          echo Version tag in env: ${{ env.VERSION }}
        
      - name: Create github release
        uses: softprops/action-gh-release@v1
        with:
          fail_on_unmatched_files: True
          tag_name: ${{ env.VERSION }}
          name: ${{ env.VERSION }}
          body_path: ./release.body.txt
          files: |
            ./artifacts/Saint_Helens.dmg/Saint_Helens.dmg
            ./artifacts/Saint_Helens_install.exe/Saint_Helens_install.exe
            ./repo/LICENSE
            ./repo/README.md
